services:
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG"]
      timeout: 10s
      retries: 10
    networks:
      - microservicesbanks

  accountsdb:
    image: mysql
    container_name: accountsdb
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=accountsdb
    networks:
      - microservicesbanks

  loansdb:
    image: mysql
    container_name: loansdb
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 60s
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=loansdb
    networks:
      - microservicesbanks

  cardsdb:
    image: mysql
    container_name: cardsdb
    ports:
      - "3308:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 60s
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cardsdb
    networks:
      - microservicesbanks

  accounts:
    build:
      context: ../../accounts
      dockerfile: Dockerfile
    image: "rudro77/accounts:0.0.1-SNAPSHOT"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      accountsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservicesbanks
    environment:
      - SPRING_APPLICATION_NAME=accounts
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8071/
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATASOURCE_URL=jdbc:mysql://accountsdb:3306/accountsdb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver-ms:8070/eureka

  loans:
    build:
      context: ../../loans
      dockerfile: Dockerfile
    image: "rudro77/loans:0.0.1-SNAPSHOT"
    container_name: loans-ms
    ports:
      - "8090:8090"
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      loansdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservicesbanks
    environment:
      - SPRING_APPLICATION_NAME=loans
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8071/
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATASOURCE_URL=jdbc:mysql://loansdb:3306/loansdb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver-ms:8070/eureka

  cards:
    build:
      context: ../../cards
      dockerfile: Dockerfile
    image: "rudro77/cards:0.0.1-SNAPSHOT"
    container_name: cards-ms
    ports:
      - "9000:9000"
    healthcheck:
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      cardsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservicesbanks
    environment:
      - SPRING_APPLICATION_NAME=cards
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8071/
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATASOURCE_URL=jdbc:mysql://cardsdb:3306/cardsdb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver-ms:8070/eureka

  gatewayserver:
    build:
      context: ../../cards
      dockerfile: Dockerfile
    image: "rudro77/gatewayserver:0.0.1-SNAPSHOT"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    depends_on:
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      configserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservicesbanks
    environment:
      - SPRING_APPLICATION_NAME=gatewayserver
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8071/
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver-ms:8070/eureka
      - SPRING_DATA_REDIS_CONNECT_TIMEOUT=2s
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_TIMEOUT=1s

  eurekaserver:
    build:
      context: ../../configserver
      dockerfile: Dockerfile
    image: "rudro77/eurekaserver:0.0.1-SNAPSHOT"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservicesbanks
    environment:
      - SPRING_APPLICATION_NAME=eurekaserver
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8071/
      - EUREKA_HOST=eurekaserver-ms

  configserver:
    build:
      context: ../../configserver
      dockerfile: Dockerfile
    image: "rudro77/configserver:0.0.1-SNAPSHOT"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - microservicesbanks

networks:
  microservicesbanks:
    driver: "bridge"
